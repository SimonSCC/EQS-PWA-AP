<Window x:Class="PWA_AccessLocal_WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PWA_AccessLocal_WPF"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="NoResize"
        Title="EQS PWA Local Instance Test Tool" Height="450" Width="350" Background="{StaticResource PageBackgounrColorBrush}">
    <Border BorderBrush="{StaticResource PrimaryColorBrush}" MouseDown="Border_MouseDown" BorderThickness="5">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid HorizontalAlignment="Stretch" Background="{StaticResource PrimaryColorBrush}">
                <Label Content="EQS PWA Local Instance Tester" FontSize="10" FontWeight="SemiBold"></Label>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Click="Button_MinimizeClick" HorizontalAlignment="Right" Background="Transparent" BorderThickness="0" Content="🗕" FontWeight="Bold" Width="20" Height="20" Margin="0 0 0 5"></Button>
                    <Button Click="Button_WindowStateButtonClick" HorizontalAlignment="Right" Background="Transparent" BorderThickness="0" Content="▢" FontWeight="Bold" Width="20" Height="20"></Button>
                    <Button Click="Button_CloseClick" HorizontalAlignment="Right" Background="Transparent" BorderThickness="0" Content="❌" FontWeight="Bold" Width="20" Height="20" ></Button>

                </StackPanel>

            </Grid>

            <StackPanel Grid.Row="1" Margin="25 25 25 25" HorizontalAlignment="Center">

                <TextBlock Text="Network name" HorizontalAlignment="Center" TextAlignment="Center"  VerticalAlignment="Center" Width="125"></TextBlock>
                <TextBox  Width="250"  VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="NetworkName_Textbox" Margin="5" Text="{Binding Path=CurrentConfig.SSID}"/>
                <TextBlock IsHitTestVisible="False" Text="Network name" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0, -30, 0,0" Foreground="DarkGray">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=NetworkName_Textbox}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <TextBlock Text="Network passphrase" HorizontalAlignment="Center" VerticalAlignment="Center" Width="125" TextAlignment="Right"></TextBlock>
                <TextBox  Width="250" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="NetworkPass_Textbox" Margin="5" Text="{Binding Path=CurrentConfig.PassPhrase}"/>
                <TextBlock IsHitTestVisible="False" Text="Network Password" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,-30,0,0" Foreground="DarkGray">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=NetworkPass_Textbox}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock Text="*Minumum 8 characters" Margin="0 -5 0 0" FontSize="11" Foreground="Yellow" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>

                <TextBlock Margin="15 15 15 0" Text="{Binding HotSpotStatusMessage}" TextAlignment="Center"></TextBlock>

                <StackPanel Visibility="{Binding StartHotspotBtnEnabled, Converter={StaticResource BoolToVisibilityConverter}}" Orientation="Horizontal" HorizontalAlignment="Center" PreviewTextInput="ValidateTextInput" Margin="5">
                    <TextBlock Text="Stop after "></TextBlock>
                    <TextBox Margin="2 0 0 0" Width="50" Text="{Binding MinutesBeforeStoppingHotspot}"></TextBox>
                    <TextBlock Margin="5 0 0 0" Text="min."></TextBlock>
                </StackPanel>
                <StackPanel Visibility="{Binding StopHotspotBtnEnabled, Converter={StaticResource BoolToVisibilityConverter}}" Orientation="Horizontal" HorizontalAlignment="Center" PreviewTextInput="ValidateTextInput" Margin="0 -23 0 0">
                    <TextBlock Text="Stopping after "></TextBlock>
                    <TextBlock Margin="2 0 0 0" Text="{Binding MinutesBeforeStoppingHotspot}"></TextBlock>
                    <TextBlock Margin="5 0 0 0" Text="min..."></TextBlock>
                </StackPanel>

                <Button IsEnabled="{Binding StartHotspotBtnEnabled}" HorizontalAlignment="Center" Margin="0 5 0 5" Width="100" Content="Start hotspot" Command="{Binding StartHotspotCommand}"></Button>
                <Button IsEnabled="{Binding StopHotspotBtnEnabled}" HorizontalAlignment="Center" Margin="0 0" Width="100" Content="Stop hotspot" Command="{Binding StopHotspotCommand}"></Button>

                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Visibility="{Binding StopHotspotBtnEnabled, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock Margin="0 5" TextAlignment="Center" TextWrapping="Wrap" Width="200" Text="'ng serve --host 0.0.0.0' to be able to access via ip"></TextBlock>
                    <TextBlock Text="Potential links to hosted PWA:" Margin="0 15 0 15" HorizontalAlignment="Center"></TextBlock>

                    <ItemsControl x:Name="LinksToPWA" ItemsSource="{Binding PWAInfo.PotentialLinksToPWA}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Margin="0 2 0 0"  HorizontalAlignment="Center">
                                    <Button Name="HyperlinkPWA" Width="140" Style="{StaticResource HyperlinkStyledButton}" Command="{Binding ElementName=LinksToPWA, Path=DataContext.HyperlinkOpenCommand}" CommandParameter="{Binding}" Content="{Binding}" HorizontalAlignment="Center" ></Button>
                                    <Button Height="15" Width="15" Margin="10 0 0 0" Click="Clipboard_Click" DataContext="{Binding}">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Image Source="Images/checklist.png"></Image>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                </StackPanel>
            </StackPanel>
        </Grid>
    </Border>
</Window>
